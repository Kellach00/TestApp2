package com.example.testapp2.Model;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;
import android.widget.Toast;

import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;

/**
 * Created by smccullough on 6/15/2017.
 */

public class CharacterSvcImpl extends Service implements ISaveSVC {

    private final String filename = "CharactersList.sio";
    private List<Character> Character;
    private Context appContext;

    public IBinder onBind(Intent arg0){
        //TODO: autogenerated method stub
        return null;
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startID){

        Toast.makeText(this, "Service Started", Toast.LENGTH_LONG).show();

        return START_STICKY;
    }

    //TODO: Create onClickListener, creating IF statements to check for an existing file
    //TODO: in which case, the update method would be used, otherwise the create method.
    //TODO: Listener will differentiate between a Save and Delete button on Frag2.
    //This should make the onBind methods irrelevant.
    public CharacterSvcImpl (Context context){

        Character = null;

        //Store context passed in, needed to open files
        appContext = context;
        readfile();
    }

    private void readfile(){
        try{
            ObjectInputStream ois = new ObjectInputStream(appContext.openFileInput(filename)); //Using appContext to open files.
            this.Character = (List<Character>) ois.readObject();
            ois.close();
        } catch(Exception e){
            String TAG = "CharacterSvcImpl";
            Log.e(TAG, e.getMessage());
        }
    }

    private void writeFile(){
        try{
            ObjectOutputStream oos = new ObjectOutputStream(appContext.openFileOutput(filename, Context.MODE_PRIVATE));
            oos.writeObject(Character);
            oos.flush();
            oos.close();
        } catch (Exception e){
            String TAG = "CharacterSvcImpl";
            Log.e(TAG, e.getMessage());
        }
    }

    @Override
    public Character Create(Character character) {

        Character.add(character);
        writeFile();
        return character;

        //TODO: write to the event log ListView that "Character File" was Created

    }

    @Override
    public List<Character> retrieveallcontacts() {
        return null;
    }

    @Override
    public Character update() {

        return null;

        //TODO: write to the even log ListView that "Character File" was Updated

    }

    @Override
    public Character delete() {
        return null;

        //TODO: write to the even log ListView that "Character File" was Updated

    }
}
